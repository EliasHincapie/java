DROP DATABASE IF EXISTS veterinaria;
create database veterinaria;
use  veterinaria;


create table rangos(
id_rangos int primary key auto_increment,
Nombres varchar(30)
);
create table usuarios(
id_usuarios int primary key auto_increment,
Nombre varchar(30),
Apellido varchar(30),
Documento varchar(30) unique,
Usuario varchar(30),
Contrasena varchar(30)
);
insert into usuarios values(1,"juan","david","121212312","juan","Admin");
insert into usuarios values(2,"Elias","Hincapie","321212","Elias","Usuario");


create table tipo_consulta(
id_tipo_consulta int primary key auto_increment,
Nombre varchar(100),
Precio double
);
insert into tipo_consulta values(1,"Consulta de rutina ",2300);
insert into tipo_consulta values(2,"Consulta de control de parásitos ",1300);
insert into tipo_consulta values(3,"Consulta de comportamiento ",800);




create table animales(
id_animales int primary key auto_increment,
Nombre varchar(30)
);


create table raza(
id_raza int primary key auto_increment,
Nombre varchar(30),
Fk_Animal int,
foreign key(fk_animal) references Veterinaria.animales(id_animales)
);
insert into animales values(1,"Perro");
select * from animales;
INSERT INTO animales (Nombre) 
VALUES ('Gato');
INSERT INTO animales (Nombre) 
VALUES ('Loro');
INSERT INTO animales (Nombre) 
VALUES ('Conejo');
INSERT INTO animales (Nombre) 
VALUES ('Pez');
insert into raza values (1,"Labrador Retriever",1);
insert into raza values (2,"Pastor Alemán",1);
insert into raza values (3,"Golden Retriever",1);
insert into raza values (4,"Bulldog",1);
insert into raza values(5,"Persa",2);
insert into raza values(6,"Siames",2);
insert into raza values(7,"British Shorthair",2);
insert into raza values(8,"Cacatúa",3);
insert into raza values(9,"Loro Gris Africano",3);
insert into raza values(10,"Mini Lop",4);
insert into raza values(11,"Mini Rexo",4);
insert into raza values(12,"Pez León",5);
insert into raza values(13,"Mandarín",5);



create table cliente(
id_cliente int primary key auto_increment,
Nombre varchar(30),
Apellido varchar(30),
Documento varchar(30) unique,
Fecha_Nacimiento date

);
INSERT INTO cliente (Nombre, Apellido, Documento, Fecha_Nacimiento) 
VALUES 
('Juan', 'Pérez', '12345678A', '1990-05-15'),
('María', 'González', '87654321B', '1985-10-20'),
('Pedro', 'Martínez', '56789012C', '1978-03-25');

create table mascotas(
id_mascotas int primary key auto_increment,
Nombre varchar(30),
Peso float,
color varchar(30),
edad date,
fk_tipo_animal int,
fk_raza int,
foreign key(fk_tipo_animal) references veterinaria.animales(id_animales),
foreign key(fk_raza) references veterinaria.raza(id_raza)

);






insert into mascotas values(1,"Rocki",30,"Negro",'1978-03-25',1,3);


create table estado(
id_estado int primary key auto_increment,
Nombre varchar(30)
);

insert into estado values(1,"En espera");
insert into estado values(2,"Aceptada");
insert into estado values(3,"Cancelada");


create table metodopago(
id_metodo int primary key auto_increment,
Nombre varchar(30)

);

insert into metodopago values(1,"Efectivo");
insert into metodopago values(2,"Tarjeta Credito/Debito");


create table consulta(
id_consulta int primary key auto_increment,
fk_mascotas int,
fk_tipo_consulta int,
motivo varchar(100),
fk_metodopago int,
fk_cliente int,
fk_estado int,
fecha date,
fk_usuarios int,
foreign key(fk_mascotas) references veterinaria.mascotas(id_mascotas),
foreign key(fk_tipo_consulta) references veterinaria.tipo_consulta(id_tipo_consulta),
foreign key(fk_metodopago) references veterinaria.metodopago(id_metodo),
foreign key(fk_cliente) references veterinaria.cliente(id_cliente),
foreign key(fk_estado) references veterinaria.estado(id_estado),
foreign key(fk_usuarios) references veterinaria.usuarios(id_usuarios)

);




select Tipo_consulta.nombre as "Nombre",count(id_tipo_consulta) as "Cantidad", sum(precio) as "Total" from tipo_consulta inner join consulta on tipo_consulta.id_tipo_consulta=consulta.fk_tipo_consulta group by Tipo_consulta.nombre;
select * from mascotas;
select * from animales;
select consulta.id_consulta, consulta.motivo, mascotas.nombre, cliente.nombre,cliente.apellido,cliente.documento,consulta.fecha,estado.nombre from consulta inner join estado on estado.id_estado=fk_estado inner join cliente on id_cliente=fk_cliente inner join tipo_consulta on fk_tipo_consulta=id_tipo_consulta inner join metodopago on id_metodo=fk_metodopago inner join mascotas on id_mascotas=fk_mascotas where  fecha between  '2021-12-12' and  '2025-01-01' group by id_consulta;
INSERT INTO mascotas (Nombre, Peso, color, edad, fk_tipo_animal,fk_raza) 
VALUES ('Rex', 25.3, 'Marrón', '2017-08-20', 1,2);
INSERT INTO mascotas (Nombre, Peso, color, edad, fk_tipo_animal,fk_raza) 
VALUES ('Polly', 1.2, 'Verde', '2020-10-15', 3,3);
INSERT INTO mascotas (Nombre, Peso, color, edad, fk_tipo_animal,fk_raza) 
VALUES ('Bugs', 3.8, 'Gris', '2018-04-03', 4,10);
INSERT INTO mascotas (Nombre, Peso, color, edad, fk_tipo_animal,fk_raza) 
VALUES ('Nemo', 0.2, 'Anaranjado', '2021-02-28', 5,13);

Delimiter $$
create procedure MostrarClientes() begin
select Documento,Nombre,Apellido,fecha_nacimiento from cliente;
end $$
Delimiter //

Delimiter $$
create procedure MostrarMascotas() begin
Select id_mascotas as 'Numero Mascota',mascotas.Nombre,Peso,animales.nombre from mascotas inner join animales on id_animales=fk_tipo_animal;
end $$
Delimiter //



Delimiter $$
create procedure ComboMetodo() begin
Select * from metodopago;
end $$
Delimiter //

Delimiter $$
create procedure ComboTipoConsulta() begin
Select * from tipo_consulta;
end $$
Delimiter //

Delimiter $$
create procedure MostrarEnEspera() begin
select consulta.id_consulta as 'Numero Consulta',cliente.documento, consulta.motivo, mascotas.nombre, cliente.nombre,cliente.apellido,consulta.fecha,estado.nombre from consulta inner join estado on estado.id_estado=fk_estado inner join cliente on id_cliente=fk_cliente inner join tipo_consulta on fk_tipo_consulta=id_tipo_consulta inner join metodopago on id_metodo=fk_metodopago inner join mascotas on id_mascotas=fk_mascotas where fk_estado=1;
end $$
Delimiter //

Delimiter $$
create procedure EstadoConfirmado(id int ) begin
update consulta set fk_estado = 2 where id_consulta = id;
end $$
Delimiter //

Delimiter $$
create procedure EstadoCancelado(id int ) begin
update consulta set fk_estado = 3 where id_consulta = id;
end $$
Delimiter //


Delimiter $$
create procedure MostrarFechas(FechaInicio date, FechaFin date ) begin
select  consulta.motivo, mascotas.nombre, cliente.nombre,cliente.apellido,cliente.documento,consulta.fecha,estado.nombre from consulta inner join estado on estado.id_estado=fk_estado inner join cliente on id_cliente=fk_cliente inner join tipo_consulta on fk_tipo_consulta=id_tipo_consulta inner join metodopago on id_metodo=fk_metodopago inner join mascotas on id_mascotas=fk_mascotas where fk_estado=2 or fk_estado=3 and fecha between  FechaInicio and  FechaFin group by id_consulta;
end $$
Delimiter //

Delimiter $$
create procedure MostrarFechasGenerales(FechaInicio date, FechaFin date ) begin
select consulta.motivo, mascotas.nombre, cliente.nombre,cliente.apellido,cliente.documento,consulta.fecha,estado.nombre from consulta inner join estado on estado.id_estado=fk_estado inner join cliente on id_cliente=fk_cliente inner join tipo_consulta on fk_tipo_consulta=id_tipo_consulta inner join metodopago on id_metodo=fk_metodopago inner join mascotas on id_mascotas=fk_mascotas where  fecha between  FechaInicio and  FechaFin group by id_consulta;end $$
Delimiter //


Delimiter $$
create procedure ComboAnimales() begin
Select * from animales;
end $$
Delimiter //


Delimiter $$
create procedure LlenarComboRaza(Fk_Animal2 int ) begin
Select * from Raza where Fk_animal=Fk_Animal2;
end $$
Delimiter //

Delimiter $$
create procedure NuevoUsuario(PCNombre varchar(30),PCApellido varchar(30),PCDocumento varchar(30),PCfecha Date ) begin
insert into cliente(Nombre,Apellido,Documento,Fecha_Nacimiento) values(PCNombre,PCApellido,PCDocumento,PCFecha);
end $$
Delimiter //


Delimiter $$
create procedure ObtenerIndiceMascota(Namee varchar(50) ) begin
select * from raza where Nombre=Namee;
end $$
Delimiter //


Delimiter $$
create procedure MostrarDinero( ) begin
select Tipo_consulta.nombre as 'Nombre' ,count(id_tipo_consulta) as "Cantidad", sum(precio) as "Total" from tipo_consulta inner join consulta on tipo_consulta.id_tipo_consulta=consulta.fk_tipo_consulta group by Tipo_consulta.nombre;
end $$
Delimiter //


Delimiter $$
create procedure LlenarComboVete( ) begin
Select * from Usuarios;
end $$
Delimiter //



Delimiter $$
create procedure MostrarVeterinario( ) begin
Select * from Usuarios;
end $$
Delimiter //


Delimiter $$
create procedure TablaVete( Mes int, IDVete int) begin
select   tipo_consulta.Nombre as 'Tipo de consulta', Mascotas.Nombre as 'Mascota', consulta.motivo as 'Motivo' ,cliente.Nombre 'Nombre Cliente', Cliente.Apellido,tipo_consulta.precio, usuarios.Nombre as 'Veterinario'    from consulta inner join mascotas on id_mascotas=fk_mascotas inner join cliente on id_cliente=fk_cliente inner join estado on id_estado=fk_estado inner join tipo_consulta on id_tipo_consulta=fk_tipo_consulta inner join usuarios on id_usuarios=fk_usuarios where month(consulta.fecha)=Mes and fk_usuarios=IDVete;
end $$
Delimiter //
